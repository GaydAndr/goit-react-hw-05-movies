{"version":3,"file":"static/js/167.f186e95e.chunk.js","mappings":"kTAGaA,EAAOC,EAAAA,GAAAA,GAAH,uNASJC,EAAWD,EAAAA,GAAAA,GAAH,iMAQRE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wCAGRI,EAAQJ,EAAAA,GAAAA,EAAH,kFAMLK,EAAML,EAAAA,GAAAA,IAAH,uC,iIC1BHM,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,EAGIA,EAFFC,eAAkBC,EADpB,EACoBA,KAAMC,EAD1B,EAC0BA,YACxBC,EACEJ,EADFI,QAEF,OACE,iCACE,SAAC,KAAD,CAAKC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAaG,MAAM,GAAIC,IAAKL,KACtC,qCAAaA,GAAc,eAC3B,uBAAYM,MAAO,CAAEC,gBAAiB,UAAWC,QAAS,QAA1D,SACGN,MAIR,ECXYO,EAAS,WACpB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BN,EAAgBM,EAAKC,QACtB,GACF,GAAE,CAACN,KAEF,8BACGF,GAAgBA,EAAaS,QAC5B,SAAC,KAAD,UACGT,EAAaU,KAAI,SAAAC,GAChB,OACE,SAAC,KAAD,WACE,SAACzB,EAAD,CAAaC,QAASwB,KADTA,EAAKC,GAIvB,OAGH,qCAIP,C,4MC9BKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAc,mCAAG,uGACrBD,IAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,MAHe,2CAAH,qDAQdK,EAAiB,mCAAG,WAAMC,GAAN,0FACxBL,IAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,MAJoB,2CAAH,sDASjBE,EAAY,mCAAG,WAAMnB,GAAN,0FACnBY,IAAAA,IAAA,iBAAoBZ,GAAW,CACpCc,OAAQ,CACNC,QAASJ,MAHa,2CAAH,sDAQZS,EAAY,mCAAG,WAAMpB,GAAN,0FACnBY,IAAAA,IAAA,iBAAoBZ,EAApB,YAAuC,CAC5Cc,OAAQ,CACNC,QAASJ,MAHa,2CAAH,sDAQZR,EAAY,mCAAG,WAAMH,GAAN,0FACnBY,IAAAA,IAAA,iBAAoBZ,EAApB,YAAuC,CAC5Cc,OAAQ,CACNC,QAASJ,MAHa,2CAAH,qD","sources":["components/FilmList/FilmList.styled.js","components/Review/ReviewsItem.jsx","components/Review/Review.jsx","services/mdAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  grid-gap: 16px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  list-style: none;\n  margin: 0 auto;\n  max-width: calc(100vw - 48px);\n  padding: 0;\n`;\nexport const ListItem = styled.li`\n  overflow: hidden;\n  background: #fff;\n  border-radius: 5px;\n  box-shadow: 0 1px 3px rgb(0 0 0 / 12%), 0 1px 1px rgb(0 0 0 / 14%),\n    0 2px 1px rgb(0 0 0 / 20%);\n`;\n\nexport const ListLink = styled(Link)`\n  width: 100%;\n`;\nexport const Title = styled.p`\n  color: #000;\n  font-weight: bold;\n  padding: 0 15px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n","import { PropTypes } from 'prop-types';\nimport { Img } from 'components/FilmList/FilmList.styled';\n\nexport const ReviewsItem = ({ reviews }) => {\n  const {\n    author_details: { name, avatar_path },\n    content,\n  } = reviews;\n  return (\n    <>\n      <Img src={avatar_path?.slice(1)} alt={name} />\n      <h3>Author: {name ? name : 'anonymus'}</h3>\n      <blockquote style={{ backgroundColor: '#d5e6eb', padding: '10px' }}>\n        {content}\n      </blockquote>\n    </>\n  );\n};\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.shape({\n    avatar_path: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      avatar_path: PropTypes.string.isRequired,\n    }),\n    content: PropTypes.string.isRequired,\n  }),\n};\n","import { fetchReviews } from 'services/mdAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem } from './ReviewsItem';\nimport { List, ListItem } from 'components/FilmList/FilmList.styled';\n\nexport const Review = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(({ data }) => {\n      setMovieReviews(data.results);\n    });\n  }, [movieId]);\n  return (\n    <>\n      {movieReviews && movieReviews.length ? (\n        <List>\n          {movieReviews.map(item => {\n            return (\n              <ListItem key={item.id}>\n                <ReviewsItem reviews={item}></ReviewsItem>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p> No data</p>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '7a4cd4317772102a9b88ef6a54b71590';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendings = async () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = async search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = async movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = async movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = async movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["List","styled","ListItem","ListLink","Link","Title","Img","ReviewsItem","reviews","author_details","name","avatar_path","content","src","slice","alt","style","backgroundColor","padding","Review","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","fetchReviews","then","data","results","length","map","item","id","API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchDetails","fetchCredits"],"sourceRoot":""}