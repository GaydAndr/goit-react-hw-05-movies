{"version":3,"file":"static/js/625.60c927a5.chunk.js","mappings":"6PAGaA,EAAOC,EAAAA,GAAAA,GAAH,wDAIJC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mO,UCLJG,EAAOH,EAAAA,GAAAA,IAAH,6EAMJI,EAAOJ,EAAAA,GAAAA,IAAH,0CAIJK,EAAML,EAAAA,GAAAA,IAAH,yC,SCTHM,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExBC,EAOED,EAPFC,YACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,OAEF,OACE,UAACX,EAAD,YACE,0BACE,SAACE,EAAD,CACEU,IACEP,EAAW,yCAC2BA,GAD3B,qEAIbQ,IAAKP,GAAgBC,OAGzB,UAACN,EAAD,YACE,0BACGK,GAAgBC,EADnB,KAC2BC,EAAaM,MAAM,EAAG,GADjD,QAGA,uCAAeC,KAAKC,MAAOP,EAAe,GAAM,KAAhD,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOM,KAAI,SAAAC,GAAI,OAAIA,EAAKX,IAAT,IAAeY,KAAK,aAI9C,EClCYC,GAASvB,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2WCANwB,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,CACEI,GAAE,iBAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,4BAC7BC,KAAK,SAFP,mBAOH,ECPYC,EAAe,WAC1B,IAAMN,GAAWC,EAAAA,EAAAA,MACjB,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BN,EAASM,EACV,GACF,GAAE,CAACL,KAGF,iCACE,SAACV,EAAD,IACCjB,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAC5B,UAACR,EAAD,YACE,yBACE,SAACE,EAAD,CACE2B,MAAOH,EAASG,MAChBD,GAAG,OACHa,UAAW,qBAAGC,SAA2B,SAAW,EAAzC,EAHb,qBAQF,yBACE,SAACxC,EAAD,CACE2B,MAAOH,EAASG,MAChBD,GAAG,UACHa,UAAW,qBAAGC,SAA2B,SAAW,EAAzC,EAHb,0BASJ,SAAC,KAAD,MAGL,C,4MC3CKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAc,mCAAG,uGACrBD,IAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,MAHe,2CAAH,qDAQdK,EAAiB,mCAAG,WAAMC,GAAN,0FACxBL,IAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,MAJoB,2CAAH,sDASjBX,EAAY,mCAAG,WAAMH,GAAN,0FACnBS,IAAAA,IAAA,iBAAoBT,GAAW,CACpCW,OAAQ,CACNC,QAASJ,MAHa,2CAAH,sDAQZQ,EAAY,mCAAG,WAAMhB,GAAN,0FACnBS,IAAAA,IAAA,iBAAoBT,EAApB,YAAuC,CAC5CW,OAAQ,CACNC,QAASJ,MAHa,2CAAH,sDAQZS,EAAY,mCAAG,WAAMjB,GAAN,0FACnBS,IAAAA,IAAA,iBAAoBT,EAApB,YAAuC,CAC5CW,OAAQ,CACNC,QAASJ,MAHa,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","pages/MovieDetails/MovieDetails.jsx","services/mdAPI.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 15px;\n`;\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n  background-color: #fff;\n\n  &.active {\n    color: #fff;\n    background-color: blue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  gap: 20px;\n  background: #fff;\n`;\n\nexport const Desc = styled.div`\n  padding: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n","import { Card, Desc, Img } from './MovieCard.styled';\nimport { PropTypes } from 'prop-types';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  return (\n    <Card>\n      <div>\n        <Img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n          }\n          alt={title ? title : name}\n        />\n      </div>\n      <Desc>\n        <h2>\n          {title ? title : name} ({release_date.slice(0, 4)})\n        </h2>\n        <p>Use Score: {Math.round((vote_average / 10) * 100)}%</p>\n        <h3>Overwiew</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(item => item.name).join(' ,')}</p>\n      </Desc>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }),\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled(NavLink)`\n  margin-bottom: 20px;\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  border: 1px solid transparent;\n  background-color: blue;\n  color: #fff;\n  transition: all 250 linear;\n  border-radius: 4px;\n  font-size: 30px;\n  &:hover {\n    color: blue;\n    background-color: #fff;\n    border: 1px solid blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Button } from './GoBackButton.styled';\n\nexport const GoBackButton = () => {\n  const location = useLocation();\n\n  return (\n    <Button\n      to={location?.state?.from ?? '/goit-react-hw-05-movies/'}\n      type=\"button\"\n    >\n      ‚áê\n    </Button>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Link, List } from './MovieDetails.styled';\nimport { fetchDetails } from 'services/mdAPI';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { GoBackButton } from 'components/GoBackButton/GoBackButton';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchDetails(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackButton />\n      {movie && <MovieCard movie={movie} />}\n      <List>\n        <li>\n          <Link\n            state={location.state}\n            to=\"cast\"\n            className={({ isActive }) => (isActive ? 'active' : '')}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            state={location.state}\n            to=\"reviews\"\n            className={({ isActive }) => (isActive ? 'active' : '')}\n          >\n            Review\n          </Link>\n        </li>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '7a4cd4317772102a9b88ef6a54b71590';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendings = async () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = async search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = async movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = async movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = async movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["List","styled","Link","NavLink","Card","Desc","Img","MovieCard","movie","poster_path","title","name","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","item","join","Button","GoBackButton","location","useLocation","to","state","from","type","MovieDetails","useState","setMovie","movieId","useParams","useEffect","fetchDetails","then","data","className","isActive","API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchCredits","fetchReviews"],"sourceRoot":""}